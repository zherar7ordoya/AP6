; VisSim Block Diagram Format (VBDF)
; Copyright (C) 1989-1995 Visual Solutions
POt="4 Channel Multiplexer Model"
POa="Visual Solutions"
PV=2.000
PS=0
PE=2
PP=0.01
PI=170
PX=0.01
PN=1e-006
PL=5
PT=1e-005
Pn=-8,4,14,"Times New Roman"
Pc=54
Po=0.01,50,664
Ppl=0
Ppp=0
Ppt=0
Ppf=1
Pe=0
PD=1024x768
Pf=0x0
Pr="stub"
Ps=1024,0,0,705,0,0
Pd=17
PM=1,1,1,1
N.1="comment"*39x2*108x12<M>
C="Mux4: 4 Channel Multiplexer Model:
Takes the 4-inputs in the \"top-down\" order in which they occur and apply them to the output every \"dt\" seconds.  If you need more channels, just add the extra inputs, set the parameter n equal to the number of inputs, duplicate the \"Ch. #\" compound blocks as required and feed their outputs to the summer.   

Limitations:
1.  Always verify that \"dt\"  is greater than the simulation time step. 
2.   Also the Channel counter circuit (which computes cc) may have counter overshoot (to n+1) when using RK2, trapeziodal, or Euler integrators- the term \"dt * .1\" fed to the summer is provided to prevent this, however, if it doesnt you may need to increase the \".1\" gain slightly.
"
N.2="label"*118x46<M>
n="==== Parameters ===="
N.3="const"(4)*118x49<M>
N.4="variable"*137x49<M>
n=":n"
N.5="variable"*137x52<M>
n=":dt"
N.6="const"(0.1)*118x52<M>
N.7="label"*80x34<M>
n="Calculate Channel Counter, cc"
N.8="resetIntegrator"(0,0,0)*65x37<M>
N.9="const"(1)*54x37<M>
N.10="variable"*51x44<M>
n=":n"
N.11="variable"*49x49<M>
n=":dt"
N.12="*"*67x44<M>
N.13="const"(0)*54x41<M>
N.14="variable"*89x39<M>
n=":dt"
N.15="/"*99x37<M>
N.16="quantize"(1)*111x38<M>
N.17="variable"*140x40<M>
n=":cc"
N.18="summingJunction"*125x39<M>
N.19="const"(1)*114x42<M>
N.20="crossDetect"(0)*45x55<MR>
N.21="summingJunction"*82x44#3,1<M>
N.22="gain"(0.1)*137x55<M>
N.23="gain"(0.1)*67x49<M>
N.24="Compound"*2x3#4,1<C>
n="       4
  Channel
Multiplexer"
Ms=2048,0,0,1414,0,0
Ml=0
Mr=0
Mh=0
Mp=0
Mw=""
N.25="variable"*17x6<M>
n=":x1"
N.26="variable"*17x20<M>
n=":x2"
N.27="variable"*16x35<M>
n=":x3"
N.28="variable"*16x49<M>
n=":x4"
N.29="=="*75x16<M>
N.30="const"(1)*63x16<M>
N.31="merge"*103x36<M>
N.32="const"(0)*79x48<M>
N.33="Compound"*104x17#2,1<MC>
n="Ch. 1"
Ms=2048,0,0,1414,0,0
Ml=0
Mr=0
Mh=0
Mp=0
Mw=""
N.34="Compound"*104x21#2,1<MC>
n="Ch. 2"
Ms=2048,0,0,1414,0,0
Ml=0
Mr=0
Mh=0
Mp=0
Mw=""
N.35="=="*76x16<M>
N.36="const"(2)*64x16<M>
N.37="merge"*96x36<M>
N.38="const"(0)*81x49<M>
N.39="Compound"*104x25#2,1<MC>
n="Ch. 3"
Ms=2048,0,0,1414,0,0
Ml=0
Mr=0
Mh=0
Mp=0
Mw=""
N.40="=="*72x16<M>
N.41="const"(3)*52x16<M>
N.42="merge"*94x36<M>
N.43="const"(0)*76x45<M>
N.44="Compound"*104x29#2,1<MC>
n="Ch. 4"
Ms=2048,0,0,1414,0,0
Ml=0
Mr=0
Mh=0
Mp=0
Mw=""
N.45="=="*76x16<M>
N.46="const"(4)*61x16<M>
N.47="merge"*102x36<M>
N.48="const"(0)*81x52<M>
N.49="summingJunction"*131x25#4,1<M>
N.50="variable"*72x17<M>
n=":cc"
N.51="variable"*72x19<M>
n=":x1"
N.52="variable"*72x21<M>
n=":x2"
N.53="variable"*72x26<M>
n=":x3"
N.54="variable"*72x31<M>
n=":x4"
I.4.i1=3.o1
I.5.i1=6.o1
I.8.i1=9.o1
I.8.i2=20.o1
I.8.i3=13.o1
I.12.i1=10.o1
I.12.i2=11.o1
I.15.i1=8.o1
I.15.i2=14.o1
I.16.i1=15.o1
I.17.i1=18.o1
I.18.i1=16.o1
I.18.i2=19.o1
I.20.i1=21.o1
f21.1.i=-
I.21.i1=8.o1
I.21.i2=12.o1
f21.3.i=-
I.21.i3=23.o1
I.22.i1=6.o1
I.23.i1=11.o1
G.24=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,33,34,39,44,49,50,51,52,53,54,
I.24.o1=49.o1
I.25.i1=24.i1
I.26.i1=24.i2
I.27.i1=24.i3
I.28.i1=24.i4
I.29.i1=30.o1
I.29.i2=33.i1
I.31.i1=29.o1
I.31.i2=33.i2
I.31.i3=32.o1
G.33=29,30,31,32,
I.33.o1=31.o1
I.33.i1=50.o1
I.33.i2=51.o1
G.34=35,36,37,38,
I.34.o1=37.o1
I.34.i1=50.o1
I.34.i2=52.o1
I.35.i1=36.o1
I.35.i2=34.i1
I.37.i1=35.o1
I.37.i2=34.i2
I.37.i3=38.o1
G.39=40,41,42,43,
I.39.o1=42.o1
I.39.i1=50.o1
I.39.i2=53.o1
I.40.i1=41.o1
I.40.i2=39.i1
I.42.i1=40.o1
I.42.i2=39.i2
I.42.i3=43.o1
G.44=45,46,47,48,
I.44.o1=47.o1
I.44.i1=50.o1
I.44.i2=54.o1
I.45.i1=46.o1
I.45.i2=44.i1
I.47.i1=45.o1
I.47.i2=44.i2
I.47.i3=48.o1
I.49.i1=33.o1
I.49.i2=34.o1
I.49.i3=39.o1
I.49.i4=44.o1
